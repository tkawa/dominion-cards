- content_for :content_title, t('random_picker')

%h1.hide= t('dominion_cards')

#select
  = simple_form_for @pick do |f|
    = f.input :sets, as: :check_boxes, collection: Card.set.options, label_html: { class: 'sets' }
    %fieldset#promo_details.details
      = f.input :promos, as: :check_boxes, collection: Pick.for_select(Card.promo_canonical_names, :promos), label_html: { class: 'promos' }
    = f.input :options, as: :check_boxes, collection: Pick.for_select(Pick::OPTIONS, :options), label_html: { class: 'options' }
    = f.input :cost_condition, as: :radio_buttons, label_html: { class: 'cost_condition' }
    %fieldset#cost_details.details
      = f.simple_fields_for :counts, OpenStruct.new(@pick.counts) do |field|
        - (2..6).each do |cost|
          = field.input cost, collection: Pick.counts_for_select, prompt: nil, wrapper: :default, required: false, input_html: { class: 'pick_counts' }, label_html: { class: 'pick_counts' }
    = f.submit id: 'pick'
  - if session[:preceding_id]
    = link_to t('preceding_pick'), pick_path(id: session[:preceding_id]), :class => 'preceding'

